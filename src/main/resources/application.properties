# Nombre de la aplicación Spring Boot
spring.application.name=mi-proyecto-spring-boot

# Puerto en el que se ejecutará el servidor
server.port=8080

# Configuración de la base de datos PostgreSQL
# URL de conexión a la base de datos PostgreSQL (protocolo, host, puerto y nombre de la base de datos)
spring.datasource.url=jdbc:postgresql://localhost:5432/universidad
# Nombre de usuario para conectarse a la base de datos
spring.datasource.username=udev
# Contraseña para conectarse a la base de datos
spring.datasource.password=1234
# Clase del driver JDBC para PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA e Hibernate
# Estrategia para la creación y actualización de las tablas en la base de datos
spring.jpa.hibernate.ddl-auto=update
# Muestra las consultas SQL generadas por Hibernate en la consola
spring.jpa.show-sql=true
# Dialecto de Hibernate para PostgreSQL, que optimiza las consultas para esta base de datos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.mvc.throw-exception-if-no-handler-found=true
#spring.web.resources.add-mappings=false

# Agregamos la configuracion para la conexion con redis
#spring.cache.type=redis
#spring.redis.host=localhost
#spring.redis.port=6379

# Configuración de Spring Session
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.timeout=30m
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-postgresql.sql
spring.session.jdbc.cleanup-cron=0 0 * * * *

# Configuración JWT
# Clave secreta utilizada para firmar los tokens JWT
# Esta clave debe ser lo suficientemente larga y compleja para garantizar la seguridad
# del token. En un entorno de producción, se recomienda utilizar una clave generada aleatoriamente y almacenarla de forma segura.
# En este caso, se utiliza una clave de ejemplo, pero en un entorno real, se debe cambiar por una clave segura.
app.jwt.secret=tuClaveSecretaMuyLargaYSeguraParaFirmarLosTokensJWT123456789
#1 día en milisegundos
app.jwt.expiration=86400000

# Configuración Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.config-url=/api-docs/swagger-config
springdoc.swagger-ui.url=/api-docs
springdoc.swagger-ui.disable-swagger-default-url=true

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# Cache Configuration
spring.cache.redis.key-prefix=universidad_
spring.cache.redis.use-key-prefix=true
